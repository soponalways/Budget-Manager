// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User Model
model User {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String?
  email        String        @unique
  password     String?
  role         String        @default("user")
  image        String?
  balance      Int           @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  budgets      Budget[]
  transactions Transaction[]
}

// Category Model
model Category {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  type      categoryType
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  transactions Transaction[]
}

enum categoryType {
  INCOME
  EXPENSE
  GOAL
}

// Transaction Model (income / expense / transfer)
model Transaction {
  id         String          @id @default(auto()) @map("_id") @db.ObjectId
  type       TransactionType
  amount     Int?
  note       String?
  date       DateTime        @default(now())
  user       User            @relation(fields: [userId], references: [id])
  userId     String          @db.ObjectId
  category   Category?       @relation(fields: [categoryId], references: [id])
  categoryId String?         @db.ObjectId
  budget     Budget?         @relation(fields: [budgetId], references: [id])
  budgetId   String?         @db.ObjectId
}

enum TransactionType {
  INCOME
  EXPENSE
  TRANSFER
}

// Budget Model
model Budget {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  title      String?
  amount     Int? 
  startTime  DateTime      @default(now())
  endTime    DateTime?
  category   String?
  shortDesc  String?
  user       User          @relation(fields: [userId], references: [id])
  userId     String        @db.ObjectId
  createdAt  DateTime      @default(now())
  spent      Int           @default(0)
  transactions Transaction[]
}